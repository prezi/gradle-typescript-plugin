group = 'com.prezi.typescript'
description = "Gradle TypeScript plugin"

if (hasProperty("release")) {
	version = [ "git", "describe", "--match", "[0-9]*", "--dirty"].execute().text.trim()
} else {
	version = [ "git", "describe", "--match", "[0-9]*", "--abbrev=0"].execute().text.trim() + "-SNAPSHOT"
}

task version {
	doLast {
		println "Version: ${version}"
	}
}

def ossRelease = hasProperty("oss") || hasProperty("sonatype")
def signArtifacts = ossRelease || hasProperty("sign")

apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'idea'

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

tasks.withType(AbstractCompile) {
	options.encoding = "UTF-8"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation gradleApi()
	implementation 'com.google.code.gson:gson:2.8.8'
	implementation "com.google.guava:guava:17.0"

	// Required only for the incubating stuff brought over from Gradle 2.0
	implementation "commons-lang:commons-lang:2.6"
	implementation "commons-io:commons-io:2.4"

	testImplementation "org.spockframework:spock-core:2.0-groovy-3.0", {
		exclude group: "org.codehaus.groovy"
	}
}

javadoc {
	failOnError = false
}

task javadocJar(type: Jar) {
	dependsOn javadoc
	classifier = "javadoc"
	from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = "sources"
}

jar {
	from "LICENSE.txt"
}

artifacts {
	archives jar
	archives javadocJar
	archives sourcesJar
}

test {
	useJUnitPlatform()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifact javadocJar
			artifact sourcesJar
			pom {
				url = "http://github.com/prezi/gradle-typescript-plugin"
				name = project.name
				description = project.description

				scm {
					url = "http://github.com/prezi/gradle-typescript-plugin"
					connection = "scm:git@github.com:prezi/gradle-typescript-plugin.git"
					developerConnection = "scm:git@github.com:prezi/gradle-typescript-plugin.git"
				}

				licenses {
					license {
						name = "The Apache Software License, Version 2.0"
						url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
						distribution = "repo"
					}
				}

				developers {
					developer {
						id = "lptr"
						name = "Lorant Pinter"
					}
					developer {
						id = "gidapataki"
						name = "Gida Pataki"
					}
				}
			}
		}
	}
	repositories {
		maven {
			def isSnapshot = version.endsWith('SNAPSHOT')
			if (ossRelease) {
				credentials {
					username = project.getProperty("sonatypeUsername")
					password = project.getProperty("sonatypePassword")
				}
				url = isSnapshot ? "https://oss.sonatype.org/content/repositories/snapshots/" : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
			} else if (project.hasProperty("nexusUser") && project.hasProperty("nexusPassword")) {
				credentials {
					username = project.getProperty("nexusUser")
					password = project.getProperty("nexusPassword")
				}
				def baseRepoUrl = "https://artifactory.prezi.com/artifactory"
				url = isSnapshot ? "${baseRepoUrl}/plugins-snapshot-local/" : "${baseRepoUrl}/plugins-release-local/"
			}
		}
	}
}

if (signArtifacts) {
	apply plugin: "signing"

	signing {
		sign publishing.publications.mavenJava
	}
}

tasks.withType(Upload).all { it.dependsOn "check" }
